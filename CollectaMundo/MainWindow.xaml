<Window 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CollectaMundo"
        xmlns:System="clr-namespace:System;assembly=System.Runtime" x:Class="CollectaMundo.MainWindow"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"       

        mc:Ignorable="d"
        Title="CollectaMundo"
        Icon="Images/Icon.ico">

    <!-- Define resources accessible by all elements in this Window -->
    <Window.Resources>
        <!-- Add the image source converter here -->
        <local:StringToImageSourceConverter x:Key="StringToImageSourceConverter"/>

        <Style x:Key="BelerenBold">
            <Setter Property="TextElement.FontFamily"
                    Value="/Fonts/#Beleren Bold">
            </Setter>
        </Style>
        <Style x:Key="MPlantin">
            <Setter Property="TextElement.FontFamily"
                    Value="/Fonts/#Mplantin">
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFFF8E7"/>
            <GradientStop Color="White" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>

    <Grid Style="{StaticResource MPlantin}" VerticalAlignment="Top">
        <Grid x:Name="GridTopMenu" VerticalAlignment="Top" Height="40" Style="{StaticResource BelerenBold}">
            <Button x:Name="MenuSearchAndFilterButton" Content="Search and Filter" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="159" Click="MenuSearchAndFilter_Click"/>
            <Button x:Name="MenuMyCollectionButton" Content="My Collection" HorizontalAlignment="Left" Margin="174,10,0,0" VerticalAlignment="Top" Width="159" Click="MenuMyCollection_Click"/>
            <Button x:Name="MenuDecksButton" Content="Decks" HorizontalAlignment="Left" Margin="338,10,0,0" VerticalAlignment="Top" Width="159"/>
            <Button x:Name="MenuUtilsButton" Content="Utilities" HorizontalAlignment="Left" Margin="502,10,0,0" VerticalAlignment="Top" Width="159" Click="MenuUtilsButton_Click"/>
        </Grid>
        <Grid x:Name="GridContentSection" Margin="0,40,0,0" Visibility="Visible">
            <Image x:Name="LogoSmall" Source="/Images/Logo.png" Stretch="Fill" VerticalAlignment="Top" HorizontalAlignment="Center" Height="211" Width="211" RenderTransformOrigin="0.5,0.5" Margin="0,40,0,0" d:IsHidden="True" Opacity="0.8" />
            <Grid x:Name="GridSideMenu" Width="250" HorizontalAlignment="Left">
                <Grid x:Name="GridFiltering">
                    <Button x:Name="ClearFiltersButton" Content="Clear filters" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Top" Width="87" Style="{StaticResource BelerenBold}" Click="ClearFiltersButton_Click"/>
                    <!--Card name and set comboboxes-->
                    <Label x:Name="CardNameLabel" Content="Card Name" HorizontalAlignment="Left" Margin="10,40,0,0" VerticalAlignment="Top" Style="{StaticResource BelerenBold}"/>
                    <ComboBox x:Name="FilterCardNameComboBox" IsTextSearchEnabled="True" Margin="10,63,0,0" Width="240" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" IsEditable="True">
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>
                    <Label x:Name="SetNameLabel" Content="Set Name" HorizontalAlignment="Left" Margin="10,84,0,0" VerticalAlignment="Top" Style="{StaticResource BelerenBold}"/>
                    <ComboBox x:Name="FilterSetNameComboBox" IsTextSearchEnabled="True" Margin="10,107,0,0" Width="240" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" IsEditable="True">
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>

                    <!--Rulestext filtering-->
                    <TextBox x:Name="FilterRulesTextTextBox" HorizontalAlignment="Left" Margin="10,132,0,0" TextWrapping="Wrap" Foreground="Gray" GotFocus="TextBox_GotFocus" LostFocus="TextBox_LostFocus" VerticalAlignment="Top" Width="240" Height="45"/>
                    <Button x:Name="FilterRulesTextButton" Content="Filter rulestext" HorizontalAlignment="Left" Margin="10,177,0,0" VerticalAlignment="Top" Style="{StaticResource BelerenBold}" Click="FilterRulesTextButton_Click" Height="20.4"/>

                    <!--Supertype listbox and filtering-->
                    <CheckBox x:Name="SuperTypesAndOrCheckBox" Content="Must contain all" HorizontalAlignment="Left" Margin="10,237,0,0" VerticalAlignment="Top" Style="{StaticResource BelerenBold}" Checked="AndOrCheckBox_Toggled" Unchecked="AndOrCheckBox_Toggled"/>
                    <ComboBox x:Name="SuperTypesComboBox" HorizontalAlignment="Left" Margin="10,252,0,0" VerticalAlignment="Top" Width="240" DropDownOpened="ComboBox_DropDownOpened" Height="20">
                        <ComboBox.Template>
                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                <Grid>
                                    <TextBox x:Name="FilterSuperTypesTextBox"
                                         VerticalAlignment="Top"
                                         BorderThickness="1"
                                         Background="Transparent"
                                         TextChanged="FilterTextBox_TextChanged"
                                         GotFocus="TextBox_GotFocus"
                                         LostFocus="TextBox_LostFocus"
                                         Foreground="{TemplateBinding Foreground}"
                                         FontFamily="{TemplateBinding FontFamily}"
                                         FontSize="{TemplateBinding FontSize}"
                                         Padding="3,3,0,0"
                                         Margin="0,0,0,0" 
                                         Height="20"/>
                                    <ToggleButton x:Name="ToggleButtonSuperTypes"
                                              Content="Supertypes" 
                                              Focusable="false"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Right"
                                              Width="69" 
                                              Height="20" 
                                              Style="{StaticResource BelerenBold}"/>
                                    <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False">
                                        <Border Background="White" BorderThickness="1" BorderBrush="Black">
                                            <ListBox x:Name="FilterSuperTypesListBox" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectionMode="Multiple">
                                                <ListBox.Resources>
                                                    <Style TargetType="{x:Type ListBoxItem}">
                                                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                    <CheckBox Margin="5,2" IsChecked="{TemplateBinding IsSelected}" Loaded="CheckBox_Loaded" Tag="SuperType">
                                                                        <ContentPresenter/>
                                                                    </CheckBox>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <EventSetter Event="ToggleButton.Checked" Handler="CheckBox_Checked"/>
                                                        <EventSetter Event="ToggleButton.Unchecked" Handler="CheckBox_Unchecked"/>
                                                    </Style>
                                                </ListBox.Resources>
                                            </ListBox>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </ControlTemplate>
                        </ComboBox.Template>
                        <sys:String>&gt;</sys:String>
                    </ComboBox>

                    <!--Card type listbox and filtering-->
                    <CheckBox x:Name="TypesAndOrCheckBox" Content="Must contain all" HorizontalAlignment="Left" Margin="10,308,0,0" VerticalAlignment="Top" Style="{StaticResource BelerenBold}" Checked="AndOrCheckBox_Toggled" Unchecked="AndOrCheckBox_Toggled"/>
                    <ComboBox x:Name="TypesComboBox" HorizontalAlignment="Left" Margin="10,323,0,0" VerticalAlignment="Top" Width="240" DropDownOpened="ComboBox_DropDownOpened" Height="20">
                        <ComboBox.Template>
                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                <Grid>
                                    <TextBox x:Name="FilterTypesTextBox"
                                             VerticalAlignment="Top"
                                             BorderThickness="1"
                                             Background="Transparent"
                                             TextChanged="FilterTextBox_TextChanged"
                                             GotFocus="TextBox_GotFocus"
                                             LostFocus="TextBox_LostFocus"
                                             Foreground="{TemplateBinding Foreground}"
                                             FontFamily="{TemplateBinding FontFamily}"
                                             FontSize="{TemplateBinding FontSize}"
                                             Padding="3,3,0,0"
                                             Margin="0,0,0,0" 
                                             Height="20"/>
                                    <ToggleButton Grid.Row="0" x:Name="ToggleButtonTypes" Content="Types" Focusable="false"
                                    ClickMode="Press"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Right"
                                    Width="40" 
                                    Height="20"
                                    Style="{StaticResource BelerenBold}"/>
                                    <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False">
                                        <Border Background="White" BorderThickness="1" BorderBrush="Black">
                                            <ListBox x:Name="FilterTypesListBox" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectionMode="Multiple">
                                                <ListBox.Resources>
                                                    <Style TargetType="{x:Type ListBoxItem}">
                                                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                    <CheckBox Margin="5,2" IsChecked="{TemplateBinding IsSelected}" Loaded="CheckBox_Loaded" Tag="Type">
                                                                        <ContentPresenter/>
                                                                    </CheckBox>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <EventSetter Event="ToggleButton.Checked" Handler="CheckBox_Checked"/>
                                                        <EventSetter Event="ToggleButton.Unchecked" Handler="CheckBox_Unchecked"/>
                                                    </Style>
                                                </ListBox.Resources>
                                            </ListBox>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </ControlTemplate>
                        </ComboBox.Template>
                        <sys:String>&gt;</sys:String>
                    </ComboBox>

                    <!--Subtype listbox and filtering-->
                    <CheckBox x:Name="SubTypesAndOrCheckBox" Content="Must contain all" HorizontalAlignment="Left" Margin="10,379,0,0" VerticalAlignment="Top" Checked="AndOrCheckBox_Toggled" Unchecked="AndOrCheckBox_Toggled"  Style="{StaticResource BelerenBold}"/>
                    <ComboBox x:Name="SubTypesComboBox" HorizontalAlignment="Left" Margin="10,394,0,0" VerticalAlignment="Top" Width="240" DropDownOpened="ComboBox_DropDownOpened" Height="20">
                        <ComboBox.Template>
                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                <Grid>
                                    <TextBox x:Name="FilterSubTypesTextBox"
                                         VerticalAlignment="Top"
                                         BorderThickness="1"
                                         Background="Transparent"
                                         TextChanged="FilterTextBox_TextChanged"
                                         GotFocus="TextBox_GotFocus"
                                         LostFocus="TextBox_LostFocus"
                                         Foreground="{TemplateBinding Foreground}"
                                         FontFamily="{TemplateBinding FontFamily}"
                                         FontSize="{TemplateBinding FontSize}"
                                         Padding="3,3,0,0"
                                         Margin="0,0,0,0" 
                                         Height="20"/>
                                    <ToggleButton x:Name="ToggleButtonSubTypes"
                                              Content="Subtypes"
                                              Focusable="false"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Right"
                                              Width="58"
                                              Height="20"
                                              Style="{StaticResource BelerenBold}"/>
                                    <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False">
                                        <Border Background="White" BorderThickness="1" BorderBrush="Black">
                                            <ListBox x:Name="FilterSubTypesListBox" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectionMode="Multiple">
                                                <ListBox.Resources>
                                                    <Style TargetType="{x:Type ListBoxItem}">
                                                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                    <CheckBox Margin="5,2" IsChecked="{TemplateBinding IsSelected}" Loaded="CheckBox_Loaded" Tag="SubType">
                                                                        <ContentPresenter/>
                                                                    </CheckBox>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <EventSetter Event="ToggleButton.Checked" Handler="CheckBox_Checked"/>
                                                        <EventSetter Event="ToggleButton.Unchecked" Handler="CheckBox_Unchecked"/>
                                                    </Style>
                                                </ListBox.Resources>
                                            </ListBox>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </ControlTemplate>
                        </ComboBox.Template>
                        <sys:String>&gt;</sys:String>
                    </ComboBox>

                    <!--Keywords listbox and filtering-->
                    <CheckBox x:Name="KeywordsAndOrCheckBox" Content="Must contain all" HorizontalAlignment="Left" Margin="10,450,0,0" VerticalAlignment="Top" Checked="AndOrCheckBox_Toggled" Unchecked="AndOrCheckBox_Toggled"  Style="{StaticResource BelerenBold}"/>
                    <ComboBox x:Name="KeywordsComboBox" HorizontalAlignment="Left" Margin="9,465,0,0" VerticalAlignment="Top" Width="240" DropDownOpened="ComboBox_DropDownOpened" Height="20">
                        <ComboBox.Template>
                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                <Grid>
                                    <TextBox x:Name="FilterKeywordsTextBox"
                                         VerticalAlignment="Top"
                                         BorderThickness="1"
                                         Background="Transparent"
                                         TextChanged="FilterTextBox_TextChanged"
                                         GotFocus="TextBox_GotFocus"
                                         LostFocus="TextBox_LostFocus"
                                         Foreground="{TemplateBinding Foreground}"
                                         FontFamily="{TemplateBinding FontFamily}"
                                         FontSize="{TemplateBinding FontSize}"
                                         Padding="3,3,0,0"
                                         Margin="0,0,0,0"
                                         Height="20"/>
                                    <ToggleButton x:Name="ToggleButtonKeywords" Content="Keywords" Focusable="false"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Right"
                                              Width="60" 
                                              Height="20"
                                              Style="{StaticResource BelerenBold}"/>
                                    <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False">
                                        <Border Background="White" BorderThickness="1" BorderBrush="Black">
                                            <ListBox x:Name="FilterKeywordsListBox" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectionMode="Multiple">
                                                <ListBox.Resources>
                                                    <Style TargetType="{x:Type ListBoxItem}">
                                                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                    <CheckBox Margin="5,2" IsChecked="{TemplateBinding IsSelected}" Loaded="CheckBox_Loaded" Tag="Keywords">
                                                                        <ContentPresenter/>
                                                                    </CheckBox>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <EventSetter Event="ToggleButton.Checked" Handler="CheckBox_Checked"/>
                                                        <EventSetter Event="ToggleButton.Unchecked" Handler="CheckBox_Unchecked"/>
                                                    </Style>
                                                </ListBox.Resources>
                                            </ListBox>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </ControlTemplate>
                        </ComboBox.Template>
                        <sys:String>&gt;</sys:String>
                    </ComboBox>

                    <!--Color filtering-->
                    <ComboBox x:Name="AllOrNoneComboBox" HorizontalAlignment="Left" Margin="10,520,0,0" VerticalAlignment="Top" Width="240"/>
                    <ListBox x:Name="FilterColorsListBox" Margin="10,547,0,0" Width="130" HorizontalAlignment="Left" ItemsSource="{Binding}" SelectionMode="Extended" Height="155" VerticalAlignment="Top" Background="{x:Null}">
                        <ListBox.Resources>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="SnapsToDevicePixels" Value="true" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <!-- Directly attach Checked and Unchecked event handlers to the CheckBox -->
                                                <CheckBox Grid.Column="0" Margin="5,2"
                                      IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
                                      Content="{TemplateBinding Content}"
                                      Checked="CheckBox_Checked"
                                      Unchecked="CheckBox_Unchecked" />
                                                <Image Grid.Column="1" Source="Images/Logo.png" Width="20" Height="20"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.Resources>
                    </ListBox>


                    <!--Mana value filtering-->
                    <Label x:Name="ManaValueLabel" Content="Mana value is " HorizontalAlignment="Left" Margin="10,708,0,0" VerticalAlignment="Top"  Style="{StaticResource BelerenBold}"/>
                    <ComboBox x:Name="ManaValueComboBox" HorizontalAlignment="Left" Margin="191,711,0,0" VerticalAlignment="Top" Width="75" Height="20"/>
                    <ComboBox x:Name="ManaValueOperatorComboBox" HorizontalAlignment="Left" Margin="95,711,0,0" VerticalAlignment="Top" Width="92" Height="20"/>

                    <!--Misc filtering-->
                    <CheckBox x:Name="ShowFoilCheckBox" Content="Show foil cards" HorizontalAlignment="Left" Margin="10,739,0,0" VerticalAlignment="Top" Checked="AndOrCheckBox_Toggled" Unchecked="AndOrCheckBox_Toggled" Height="16" Width="104"  Style="{StaticResource BelerenBold}"/>

                    <!--filter selections text blocks-->
                    <TextBlock x:Name="CardSuperTypesTextBlock" HorizontalAlignment="Left" Margin="11,272,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="240" Height="30"/>
                    <TextBlock x:Name="CardTypesTextBlock" HorizontalAlignment="Left" Margin="10,343,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="240" Height="30"/>
                    <TextBlock x:Name="CardSubTypesTextBlock" HorizontalAlignment="Left" Margin="10,414,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="240" Height="30"/>
                    <TextBlock x:Name="CardKeyWordsTextBlock" HorizontalAlignment="Left" Margin="10,485,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="240" Height="30"/>
                    <TextBlock x:Name="CardRulesTextTextBlock" HorizontalAlignment="Left" Margin="10,197,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="240" Height="30"/>

                </Grid>
                <Grid x:Name="GridUtilsMenu" Visibility="Collapsed">
                    <Button x:Name="CheckForUpdatesButton" Content="Check for updates" HorizontalAlignment="Left" VerticalAlignment="Top" Width="130" Margin="10,0,0,0" Style="{StaticResource BelerenBold}" Click="CheckForUpdatesButton_Click"/>
                    <Label x:Name="UtilsInfoLabel" Content="" HorizontalAlignment="Left" Margin="10,25,0,0" VerticalAlignment="Top" Width="182" Height="30"/>
                    <Button x:Name="UpdateDbButton" Content="Update card database" HorizontalAlignment="Left" Margin="10,60,0,0" VerticalAlignment="Top" Width="129"  Style="{StaticResource BelerenBold}" Click="UpdateDbButton_Click" Visibility="Collapsed"/>
                    <Button x:Name="CreateBackupButton" Content="Create backup of my collection" HorizontalAlignment="Left" Margin="10,85,0,0" VerticalAlignment="Top" Style="{StaticResource BelerenBold}" Click="CreateBackupButton_Click"/>
                    <Button x:Name="ImportCollectionButton" Content="Import to my collection" HorizontalAlignment="Left" Margin="10,110,0,0" VerticalAlignment="Top" Style="{StaticResource BelerenBold}" Click="ImportCollectionButton_Click"/>
                </Grid>
            </Grid>
            <Grid x:Name="GridCardImages" HorizontalAlignment="Right" Width="250" d:IsHidden="True">
                <Label x:Name="ImagePromoLabel" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Width="250"/>
                <Label x:Name="ImageSetLabel" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Width="250" Margin="0,35,0,0"/>
                <Image x:Name="CardImage" 
                   Source="{Binding ImageSourceUrl, Converter={StaticResource StringToImageSourceConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,80,10,0"/>

                <Image x:Name="CardImageSecondary"
                   Source="{Binding ImageSourceUrl2nd, Converter={StaticResource StringToImageSourceConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top" Margin="0,461,10,0"/>
            </Grid>
            <Grid x:Name="GridSearchAndFilterAllCards" Width="1000" d:IsHidden="True">
                <Label x:Name="HeadlineSearchAndFilter" Content="Search and Filter Cards" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="24" Height="40" Style="{StaticResource BelerenBold}"/>
                <Label x:Name="AllCardsCountLabel" Content="" HorizontalAlignment="Left" Margin="10,3,0,0" VerticalAlignment="Top" Width="165" Height="30"/>
                <!--The main card view datagrid-->
                <DataGrid x:Name="AllCardsDataGrid" 
                          Margin="0,260,0,0"
                          AutoGenerateColumns="False"
                          SelectionChanged="CardImageSelectionChangedHandler"
                          ScrollViewer.CanContentScroll="True"
                          EnableColumnVirtualization="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          CanUserAddRows="False"
                          HorizontalAlignment="Stretch">
                    <DataGrid.CellStyle>
                        <Style/>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Set Name" Binding="{Binding SetName}" IsReadOnly="True" />
                        <DataGridTemplateColumn Header="Icon" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding SetIcon}" Width="20" Height="20" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Mana Cost" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding ManaCostImage}" Height="20" HorizontalAlignment="Right"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Card Types" Binding="{Binding Types}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Finishes" Binding="{Binding Finishes}" IsReadOnly="True" />
                        <DataGridTemplateColumn Header="Action">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="Add to collection" Click="AddCardToCollection_Click"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </DataGrid>
                <!--Cards to add listview-->
                <ListView x:Name="CardsToAddListView" Margin="0,40,0,0" VerticalAlignment="Top" Height="211" Visibility="Collapsed">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Card Name" DisplayMemberBinding="{Binding Name}"/>
                            <GridViewColumn Header="Set" DisplayMemberBinding="{Binding SetName}"/>
                            <GridViewColumn Header="Condition">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Conditions}" SelectedItem="{Binding SelectedCondition, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ListViewComboBox_SelectionChanged"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Finish">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding AvailableFinishes}" SelectedItem="{Binding SelectedFinish, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ListViewComboBox_SelectionChanged"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Language">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding OtherLanguages}" SelectedItem="{Binding Language, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ListViewComboBox_SelectionChanged"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="+">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="+" Tag="CardsOwned" VerticalAlignment="Center" Grid.Column="1" HorizontalAlignment="Right" Width="15" Click="IncrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Count">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Width="Auto" HorizontalAlignment="Center" TextChanged="CardsOwnedTextBox_TextChanged">
                                            <TextBox.Text>
                                                <Binding Path="CardsOwned" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:IntegerValidationRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="-">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="-" Tag="CardsOwned" VerticalAlignment="Center" Grid.Column="0" HorizontalAlignment="Left" Width="15" Click="DecrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="+">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="+" Tag="CardsForTrade" VerticalAlignment="Center" Grid.Column="1" HorizontalAlignment="Right" Width="15" Click="IncrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Trade">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Width="Auto" HorizontalAlignment="Center" TextChanged="CardsForTradeTextBox_TextChanged">
                                            <TextBox.Text>
                                                <Binding Path="CardsForTrade" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:IntegerValidationRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="-1">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="-" Tag="CardsForTrade" VerticalAlignment="Center" Grid.Column="0" HorizontalAlignment="Left" Width="15" Click="DecrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
                <Button x:Name="ButtonAddCardsToMyCollection" Content="Add selected cards to my collection" HorizontalAlignment="Right" Margin="0,20,0,0" VerticalAlignment="Top" Width="199" Click="ButtonAddCardsToMyCollection_Click" Visibility="Collapsed"/>
                <TextBlock x:Name="AddStatusTextBlock" HorizontalAlignment="Left" Margin="0,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="187" Visibility="Collapsed"/>
                <Button x:Name="ButtonEditCardsInMyCollection" Content="Update selected cards" HorizontalAlignment="Right" Margin="0,20,0,0" VerticalAlignment="Top" Width="199" Click="ButtonEditCardsInMyCollection_Click" Visibility="Collapsed"/>
            </Grid>
            <Grid x:Name="GridMyCollection" VerticalAlignment="Top" Width="1000" d:IsHidden="True">
                <Label x:Name="HeadlineMyCollection" Content="My Collection" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="24" Height="40" Style="{StaticResource BelerenBold}"/>
                <Label x:Name="MyCardsCountLabel" Content="" HorizontalAlignment="Left" Margin="0,3,0,0" VerticalAlignment="Top" Width="165" Height="30"/>
                <!--The my collection datagrid-->
                <DataGrid x:Name="MyCollectionDatagrid" 
                          Margin="0,260,0,0" 
                          AutoGenerateColumns="False" 
                          SelectionChanged="CardImageSelectionChangedHandler" 
                          ScrollViewer.CanContentScroll="True" 
                          EnableColumnVirtualization="True" 
                          VirtualizingPanel.IsVirtualizing="True"
                          CanUserAddRows="False" 
                          HorizontalAlignment="Stretch">
                    <DataGrid.CellStyle>
                        <Style/>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True" />
                        <DataGridTextColumn Header="SetName" Binding="{Binding SetName}" IsReadOnly="True" />
                        <DataGridTemplateColumn Header="Icon" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding SetIcon}" Width="20" Height="20" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Mana Cost text" Visibility="Collapsed" Binding="{Binding ManaCost}" IsReadOnly="True" />
                        <DataGridTemplateColumn Header="Mana Cost" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding ManaCostImage}" Height="20" HorizontalAlignment="Right"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Card Types" Binding="{Binding Types}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Finish" Binding="{Binding SelectedFinish}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Language" Binding="{Binding Language}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Condition" Binding="{Binding SelectedCondition}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Count" Binding="{Binding CardsOwned}" IsReadOnly="True" />
                        <DataGridTextColumn Header="Trade" Binding="{Binding CardsForTrade}" IsReadOnly="True" />
                        <DataGridTemplateColumn Header="Action">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="Edit" Click="EditCardInCollection_Click"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <!--Cards to edit-->
                <ListView x:Name="CardsToEditListView" Margin="0,40,0,0" VerticalAlignment="Top" Height="211" Visibility="Collapsed">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Card Name" DisplayMemberBinding="{Binding Name}"/>
                            <GridViewColumn Header="Set" DisplayMemberBinding="{Binding SetName}"/>
                            <GridViewColumn Header="Condition">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Conditions}" SelectedItem="{Binding SelectedCondition, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ListViewComboBox_SelectionChanged"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Finish">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding AvailableFinishes}" SelectedItem="{Binding SelectedFinish, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ListViewComboBox_SelectionChanged"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Language">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding OtherLanguages}" SelectedItem="{Binding Language, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ListViewComboBox_SelectionChanged"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="+">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="+" Tag="CardsOwned" VerticalAlignment="Center" Grid.Column="1" HorizontalAlignment="Right" Width="15" Click="IncrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Count">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Width="Auto" HorizontalAlignment="Center" TextChanged="CardsOwnedTextBox_TextChanged">
                                            <TextBox.Text>
                                                <Binding Path="CardsOwned" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:IntegerValidationRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="-">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="-" Tag="CardsOwned" VerticalAlignment="Center" Grid.Column="0" HorizontalAlignment="Left" Width="15" Click="DecrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="+">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="+" Tag="CardsForTrade" VerticalAlignment="Center" Grid.Column="1" HorizontalAlignment="Right" Width="15" Click="IncrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Trade">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Width="Auto" HorizontalAlignment="Center" TextChanged="CardsForTradeTextBox_TextChanged">
                                            <TextBox.Text>
                                                <Binding Path="CardsForTrade" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:IntegerValidationRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="-1">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="-" Tag="CardsForTrade" VerticalAlignment="Center" Grid.Column="0" HorizontalAlignment="Left" Width="15" Click="DecrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
                <TextBlock x:Name="EditStatusTextBlock" HorizontalAlignment="Left" Margin="0,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="187" Visibility="Collapsed"/>
            </Grid>
            <Grid x:Name="GridUtilitiesSection" Width="1080" HorizontalAlignment="Center" VerticalAlignment="Top" d:IsHidden="True">
                <Image x:Name="Inspiredtinkering" Margin="0,200,0,0" Source="/Images/inspired-tinkering-183.png" HorizontalAlignment="Center" VerticalAlignment="Top" Width="600"/>
                <Label x:Name="HeadlineUtilities" Content="Utilities" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="24" Height="40" Style="{StaticResource BelerenBold}"/>
                <Grid x:Name="GridUtilsScreen" HorizontalAlignment="Center" Width="1080" d:IsHidden="True">
                    <Grid x:Name="GridImportWizard" HorizontalAlignment="Center" Width="1080" Visibility="Collapsed" d:IsHidden="True">
                        <Label x:Name="ImportStartLabel" Content="The Import Wizard" HorizontalAlignment="Center" Margin="0,45,0,0" VerticalAlignment="Top" FontSize="48" Style="{StaticResource BelerenBold}"/>
                        <Button x:Name="ButtonCancelImport" Content="Cancel Import" HorizontalAlignment="Left" Margin="271,330,0,0" VerticalAlignment="Top" Style="{StaticResource BelerenBold}" Visibility="Collapsed" Click="CancelImport_Click"/>
                        <Label x:Name="CrunchingDataLabel" Content="Please wait - crunching data..." HorizontalAlignment="Right" Margin="1140,330,0,0" VerticalAlignment="Top" Height="25" Width="170" Visibility="Collapsed"/>
                        <Grid x:Name="GridImportStartScreen" HorizontalAlignment="Center" Width="1080" Visibility="Collapsed">
                            <TextBlock HorizontalAlignment="Center" Margin="0,146,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="280" Width="776" FontSize="16">
                                <Run Text="You have chosen to consult the Import Wizard. This will allow you to import card lists to your collection. "/>
                                <LineBreak/><LineBreak/>
                                <Run Text="Some important notes:"/><LineBreak/>
                                <Run Text=" &#x2022; Card list has to be in a .csv format"/><LineBreak/>
                                <Run Text=" &#x2022; Cards imported with the wizard will be ADDED to existing cards in your collection"/><LineBreak/>
                                <Run Text=" &#x2022; Imported cards will be mapped to a specific version of the card"/>
                                <LineBreak/><LineBreak/>
                                <Run Text="Elborating on the last point: As an example, there are 4 different versions of the card &quot;Flooded Strand&quot; in the Modern Horizons 3. If your card list contains:"/>
                                <LineBreak/><LineBreak/>
                                <Run Text=" &#x2022; | Flooded Strand | Modern Horizons 3 |"/>
                                <LineBreak/><LineBreak/>
                                <Run Text="...we need to figure out which specific version of &quot;Flooded Strand&quot; should be added to your collection."/><LineBreak/>
                            </TextBlock>
                            <Image Margin="0,449,0,0" Source="Images/rush_of_knowledge.jpg" HorizontalAlignment="Center" VerticalAlignment="Top" Height="274" Width="344" Opacity="0.7"/>
                            <Button x:Name="BeginImportButton" Content="Let's go!" HorizontalAlignment="Center" Margin="0,734,0,0" VerticalAlignment="Top" Click="BeginImportButton_Click" Width="74" Style="{StaticResource BelerenBold}"/>
                        </Grid>
                        <Grid x:Name="GridImportIdColumnMapping" HorizontalAlignment="Center" Width="1320" Visibility="Collapsed">
                            <Label Content="Card ID Mapping" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                            <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" Width="776" FontSize="16">
                                <Run Text="If your csv-file has any column with card Id, The Import Wizard will have the greatest chance of succesfully mapping your cards to be imported with cards in the main card database."/>
                                <LineBreak/><LineBreak/>
                                <Run Text="It will recognize a variety of card id formats, e.g. Scryfall Id, Card Market Id, TCG Player Id etc."/><LineBreak/>
                                <Run Text=" &#x2022; In the left column, choose the card Id header in your import file"/><LineBreak/>
                                <Run Text=" &#x2022; In the right column, choose the matching format available in the card database"/><LineBreak/>
                                <Run Text=" &#x2022; If your import file does not contain a card id column, simply click &quot;Skip&quot;"/>
                            </TextBlock>
                            <ListView x:Name="IdColumnMappingListView" Margin="0,330,0,0" Width="474" Height="77" HorizontalAlignment="Center" VerticalAlignment="Top">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Import file card Id header" Width="150">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox ItemsSource="{Binding CsvHeaders}" SelectedItem="{Binding SelectedCsvHeader}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Matching database card Id format" Width="200">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox ItemsSource="{Binding DatabaseFields}" SelectedItem="{Binding SelectedDatabaseField}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Reset mapping" Width="100">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="Clear Mapping" Click="ClearMappingButton_Click"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Button x:Name="ButtonIdColumnMappingNext" Content="Next" HorizontalAlignment="Left" Margin="1020,330,0,0" VerticalAlignment="Top" Width="30" Height="20" Style="{StaticResource BelerenBold}" Click="ButtonIdColumnMappingNext_Click"/>
                            <Button x:Name="ButtonSkipIdColumnMapping" Content="Skip card Id mapping" HorizontalAlignment="Left" Margin="1020,360,0,0" VerticalAlignment="Top" Height="20" Width="120" Style="{StaticResource BelerenBold}" Click="ButtonSkipIdColumnMapping_Click"/>
                        </Grid>
                        <Grid x:Name="GridImportNameAndSetMapping" HorizontalAlignment="Center" Width="1320" Visibility="Collapsed">
                            <Label Content="Card Name, Set Name and Set Code Mapping" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                            <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" Width="776" FontSize="16"
                                ><Run Text="If you are, it means that The Import Wizard was not able to map all cards in import file uniquely to a card in the card database."/>
                                <LineBreak/><LineBreak/>
                                <Run Text="Fret not, bold mage! Now we will try to map the cards in the import file using the card name + set name and/or set code, assuming they exist in the import file."/><LineBreak/>
                                <Run Text="You must choose a mapping for card name and at least one of either set name or set code. If you can map both, it will try to match using both."/>
                            </TextBlock>
                            <ListView x:Name="NameAndSetMappingListView" Margin="0,330,0,0" Width="474" Height="110" HorizontalAlignment="Center" VerticalAlignment="Top">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Fields to map" Width="150">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding CardSetField}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Import file header" Width="200">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox ItemsSource="{Binding CsvHeaders}" SelectedItem="{Binding CsvHeader}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Reset Mapping" Width="100">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="Clear Mapping" Click="ClearMappingButton_Click"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Button x:Name="ButtonNameAndSetMappingNext" Content="Next" HorizontalAlignment="Left" Margin="1020,330,0,0" VerticalAlignment="Top" Width="30" Height="20" Style="{StaticResource BelerenBold}" Click="ButtonNameAndSetMappingNext_Click"/>
                        </Grid>
                        <Grid x:Name="GridImportMultipleUuidsSelection" HorizontalAlignment="Center" Width="1320" Visibility="Collapsed">
                            <Label Content="Multiple versions of a card found!" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                            <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" Width="776" FontSize="16"
                                ><Run Text="The Good News: We found some of your imported cards in the card database. The Bad News: We found more than one version of the cards matching by card name + set name and/or set code."/>
                                <LineBreak/><LineBreak/>
                                <Run Text="So The Import Wizard needs a bit more help. Choose in the right column the specific version of the card(s) you are trying to import. Check the image reference on the right for help."/><LineBreak/>
                                <Run Text="You must select a version for all cards for the import to continue."/>
                            </TextBlock>
                            <DataGrid x:Name="MultipleUuidsDataGrid" 
                              AutoGenerateColumns="False" 
                              CanUserAddRows="False"
                              HorizontalAlignment="Center" Margin="0,330,0,0" Width="474">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name of card to import" Binding="{Binding Name}" Width="*"/>
                                    <DataGridTemplateColumn Header="Select a version" Width="*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding VersionedUuids}" 
                                                  DisplayMemberPath="DisplayText"
                                                  SelectedValuePath="Uuid"
                                                  SelectedValue="{Binding SelectedUuid, Mode=TwoWay}" 
                                                  SelectionChanged="CardImageSelectionChangedHandler"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Button x:Name="ButtonMultipleUuidsNext" Content="Next" HorizontalAlignment="Left" Margin="1020,330,0,0" VerticalAlignment="Top" Width="30" Height="20" Style="{StaticResource BelerenBold}" Click="ButtonMultipleUuidsNext_Click"/>
                        </Grid>
                        <Grid x:Name="GridImportAdditionalFieldsMapping" HorizontalAlignment="Center" Width="1320" Visibility="Collapsed">
                            <Label Content="Mapping additional fields" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                            <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" Width="776" FontSize="16">
                                <Run Text="Cards will be imported with the following default values if mapping is blank:"/>
                                <LineBreak/><LineBreak/>
                                <Run Text=" &#x2022; Condition: &quot;Near Mint&quot;"/><LineBreak/>
                                <Run Text=" &#x2022; Card Finish: &quot;nonfoil&quot;"/><LineBreak/>
                                <Run Text=" &#x2022; Cards Owned: &quot;1&quot;"/><LineBreak/>
                                <Run Text=" &#x2022; Cards For Trade/Selling: &quot;0&quot;"/><LineBreak/>
                                <Run Text=" &#x2022; Language: &quot;English&quot;"/><LineBreak/>
                            </TextBlock>
                            <ListView x:Name="AddionalFieldsMappingListView" Margin="0,330,0,0" Width="474" Height="180" HorizontalAlignment="Center" VerticalAlignment="Top">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Field to map" Width="150">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding CardSetField}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Import file header" Width="200">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox ItemsSource="{Binding CsvHeaders}" SelectedItem="{Binding CsvHeader}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Reset mapping" Width="100">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="Clear Mapping" Click="ClearMappingButton_Click"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Button x:Name="ButtonAdditionalFieldsNext" Content="Next" HorizontalAlignment="Left" Margin="1020,330,0,0" VerticalAlignment="Top"  Width="30" Height="20" Style="{StaticResource BelerenBold}" Click="ButtonAdditionalFieldsNext_Click"/>
                        </Grid>
                        <Grid x:Name="GridImportCardConditionsMapping" HorizontalAlignment="Center" Width="1320" Visibility="Collapsed">
                            <Label Content="Card conditions" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                            <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" Width="776" FontSize="16">
                                <Run Text="Left column are the conditions found in the import file. Please map them to available conditions in the database (latter based on MCM conditions)."/>
                                <LineBreak/><LineBreak/>
                                <Run Text="Blank Conditions will be imported as &quot;Near Mint&quot;"/>
                            </TextBlock>
                            <ListView x:Name="ConditionsMappingListView" Margin="0,330,0,0" Width="474" HorizontalAlignment="Center" VerticalAlignment="Top">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Conditions found in import file" Width="180">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding CsvValue}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Available conditions in database" Width="190">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox ItemsSource="{Binding CardSetValue}" SelectedItem="{Binding SelectedCardSetValue}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Reset mapping" Width="94">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="Clear Mapping" Click="ClearMappingButton_Click" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Button x:Name="ButtonConditionMappingNext" Content="Next" HorizontalAlignment="Left" Margin="1020,330,0,0" VerticalAlignment="Top"  Width="30" Height="20" Style="{StaticResource BelerenBold}" Click="ButtonConditionMappingNext_Click"/>
                        </Grid>
                        <Grid x:Name="GridImportFinishesMapping" HorizontalAlignment="Center" Width="1320" Visibility="Collapsed">
                            <Label Content="Card finishes" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                            <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" Width="776" FontSize="16">
                                <Run Text="Left column are the finishes found in the import file. Please map them to available finishes in the database."/>
                                <LineBreak/><LineBreak/>
                                <Run Text="Blank Conditions will be imported as &quot;nonfoil&quot;"/>
                            </TextBlock>
                            <ListView x:Name="FinishesMappingListView" Margin="0,330,0,0" Width="474" HorizontalAlignment="Center" VerticalAlignment="Top">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Finishes found in import file" Width="180">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding CsvValue}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Available conditions in database" Width="190">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox ItemsSource="{Binding CardSetValue}" SelectedItem="{Binding SelectedCardSetValue}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Reset mapping" Width="94">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="Clear Mapping" Click="ClearMappingButton_Click"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Button x:Name="ButtonFinishesMappingNext" Content="Next" HorizontalAlignment="Left" Margin="1020,330,0,0" VerticalAlignment="Top"  Width="30" Height="20" Style="{StaticResource BelerenBold}" Click="ButtonFinishesMappingNext_Click"/>
                        </Grid>
                        <Grid x:Name="GridImportLanguageMapping" HorizontalAlignment="Center" Width="1320" Visibility="Collapsed">
                            <Label Content="Card languages" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                            <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" Width="776" FontSize="16">
                                <Run Text="Left column are the languages found in the import file. Please map them to available languages in the database."/>
                                <LineBreak/><LineBreak/>
                                <Run Text="Blank Languages will be imported as &quot;English&quot;"/>
                            </TextBlock>
                            <ListView x:Name="LanguageMappingListView" Margin="0,330,0,0" Width="474" HorizontalAlignment="Center" VerticalAlignment="Top">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Languages found in import file" Width="180">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding CsvValue}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Available languages in database" Width="190">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox ItemsSource="{Binding CardSetValue}" SelectedItem="{Binding SelectedCardSetValue}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Reset mapping" Width="94">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="Clear Mapping" Click="ClearMappingButton_Click"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Button x:Name="ButtonLanguageMappingNext" Content="Next" HorizontalAlignment="Left" Margin="1020,330,0,0" VerticalAlignment="Top"  Width="30" Height="20" Style="{StaticResource BelerenBold}" Click="ButtonLanguageMappingNext_Click"/>
                        </Grid>
                        <Grid x:Name="GridImportConfirm" HorizontalAlignment="Center" Width="1320" Visibility="Collapsed">
                            <Label Content="Summary and confirmation" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                            <StackPanel x:Name="ImportSummaryContainer" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,184,0,0" Width="474">
                                <TextBlock x:Name="ImportSummaryTextBlock" TextWrapping="Wrap" Height="Auto" Visibility="Visible"/>
                            </StackPanel>
                            <Button x:Name="ButtonImportConfirm" Content="Looks good! Proceed with import..." HorizontalAlignment="Left" Margin="1020,330,0,0" VerticalAlignment="Top" Width="200" Height="20" Style="{StaticResource BelerenBold}" Click="ButtonImportConfirm_Click"/>
                            <Button x:Name="SaveListOfUnimportedItems" Content="Save unimported items to text file" HorizontalAlignment="Left" Margin="1020,360,0,0" VerticalAlignment="Top" Width="200" Height="20" Style="{StaticResource BelerenBold}" Visibility="Collapsed" Click="SaveListOfUnimportedItems_Click"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <Grid x:Name="GridStatus" Margin="0,40,0,0" VerticalAlignment="Top" d:IsHidden="True">
            <Image Source="/Images/Logo.png" Stretch="Fill" VerticalAlignment="Top" HorizontalAlignment="Center" Height="500" Width="500" RenderTransformOrigin="0.5,0.5" Margin="0,76,0,0" />
            <Label Content="CollectaMundo" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="48" Style="{StaticResource BelerenBold}"/>
            <ProgressBar x:Name="progressBar" HorizontalAlignment="Center" Height="11" Margin="0,652,0,0" VerticalAlignment="Top" Width="738"/>
            <Label x:Name="StatusLabel" Content="" HorizontalAlignment="Center" Margin="0,621,0,0" VerticalAlignment="Top" Width="738"/>
            <Label x:Name="FirstTimeSetupLabel" Content="" HorizontalAlignment="Left" Margin="591,582,0,0" VerticalAlignment="Top" FontSize="18"/>
        </Grid>
    </Grid>
</Window>