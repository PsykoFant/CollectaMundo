<Window 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CollectaMundo"
        xmlns:System="clr-namespace:System;assembly=System.Runtime" x:Class="CollectaMundo.MainWindow"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"       

        mc:Ignorable="d"
        Title="CollectaMundo"
        Icon="/Resources/Images/Icon.ico" 
        Width="1920">

    <!-- Define resources accessible by all elements in this Window -->
    <Window.Resources>
        <local:StringToImageSourceConverter x:Key="StringToImageSourceConverter"/>
        <local:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
    </Window.Resources>
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFBF7B4"/>
            <GradientStop Color="White" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>
    <Grid x:Name="AppWindow" Style="{StaticResource MPlantin}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="GridTopMenu" Grid.Row="0" Grid.ColumnSpan="3" VerticalAlignment="Top" Height="40" IsEnabled="False">
            <Button x:Name="MenuSearchAndFilterButton" Content="Search and Filter" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="160" Click="MenuSearchAndFilter_Click" Height="20"/>
            <Button x:Name="MenuMyCollectionButton" Content="My Collection" HorizontalAlignment="Left" Margin="175,10,0,0" VerticalAlignment="Top" Width="160" Click="MenuMyCollection_Click" Height="20"/>
            <Button x:Name="MenuDecksButton" Content="Decks" HorizontalAlignment="Left" Margin="340,10,0,0" VerticalAlignment="Top" Width="160" Height="20"/>
            <Button x:Name="MenuUtilsButton" Content="Utilities" HorizontalAlignment="Left" Margin="505,10,0,0" VerticalAlignment="Top" Width="160" Click="MenuUtilsButton_Click" Height="20"/>
        </Grid>
        <Grid x:Name="GridStatus" Grid.Row="1" Grid.ColumnSpan="3" Margin="0,40,0,0" VerticalAlignment="Top" d:IsHidden="True">
            <Image Source="/Resources/Images/Logo.png" Stretch="Fill" VerticalAlignment="Top" HorizontalAlignment="Center" Height="500" Width="500" Margin="0,76,0,0" />
            <Label Content="CollectaMundo" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="48" Style="{StaticResource BelerenBold}"/>
            <ProgressBar x:Name="ProgressBar" HorizontalAlignment="Center" Height="15" Margin="0,650,0,0" VerticalAlignment="Top" Width="500" BorderBrush="Black" Visibility="Collapsed"/>
            <Label x:Name="StatusLabel" Content="" HorizontalAlignment="Center" Margin="0,621,0,0" VerticalAlignment="Top"/>
            <Label x:Name="FirstTimeSetupLabel" Content="" HorizontalAlignment="Center" Margin="0,582,0,0" VerticalAlignment="Top" FontSize="18"/>
        </Grid>
        <Grid x:Name="GridSideMenu" Grid.Row="1" Grid.Column="0" Width="250" HorizontalAlignment="Left" Margin="0,0,0,0" Visibility="Hidden">
            <Grid x:Name="GridFiltering" d:IsHidden="True">

                <Button x:Name="ClearFiltersButton" Content="Clear filters" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Top" Width="90" Height="20" Click="ClearFiltersButton_Click" />

                <!--Color filtering-->
                <ComboBox x:Name="AllOrNoneComboBox" HorizontalAlignment="Right" Margin="0,35,0,0" VerticalAlignment="Top"/>
                <ListBox x:Name="FilterColorsListBox" Margin="0,30,0,0" Width="50" HorizontalAlignment="Left" ItemsSource="{Binding}" SelectionMode="Extended" Height="140" VerticalAlignment="Top" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" FontSize="0.01">
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <CheckBox Margin="5,2" 
                                          IsChecked="{TemplateBinding IsSelected}" 
                                          Loaded="CheckBox_Loaded"
                                          Tag="Colors">
                                            <ContentPresenter />
                                        </CheckBox>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="ToggleButton.Checked" Handler="CheckBox_Checked" />
                            <EventSetter Event="ToggleButton.Unchecked" Handler="CheckBox_Unchecked" />
                        </Style>
                    </ListBox.Resources>
                </ListBox>
                <ListBox x:Name="FilterColorsListBoxIcons" Margin="20,30,0,0" Width="50" HorizontalAlignment="Left" ItemsSource="{Binding}" Height="140" VerticalAlignment="Top" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding ManaCostImage}" Height="15" HorizontalAlignment="Right"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <!--Mana value filtering-->
                <Label x:Name="ManaValueLabel" Content="Mana value is: " HorizontalAlignment="Left" Margin="0,170,0,0" VerticalAlignment="Top" Style="{StaticResource BelerenBold}"/>
                <ComboBox x:Name="ManaValueOperatorComboBox" HorizontalAlignment="Left" Margin="10,195,0,0" VerticalAlignment="Top" Height="20"/>
                <ComboBox x:Name="ManaValueComboBox" HorizontalAlignment="Left" Margin="125,195,0,0" VerticalAlignment="Top" Height="20"/>

                <!--Supertype listbox and filtering-->
                <ComboBox x:Name="SuperTypesComboBox" HorizontalAlignment="Left" Margin="10,225,0,0" VerticalAlignment="Top" Width="190" Height="20" DropDownOpened="ComboBox_DropDownOpened">
                    <ComboBox.Template>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <TextBox x:Name="FilterSuperTypesTextBox"
                                         Background="Transparent"
                                         TextChanged="FilterTextBox_TextChanged"
                                         GotFocus="TextBox_GotFocus"
                                         LostFocus="TextBox_LostFocus"
                                         Foreground="{TemplateBinding Foreground}"
                                         Padding="3,3,0,0"
                                         Margin="0,0,0,0"/>
                                <ToggleButton x:Name="ToggleButtonSuperTypes"
                                              Content="Supertypes" 
                                              Focusable="false"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                              HorizontalAlignment="Right"
                                              Width="70"/>
                                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False">
                                    <Border Background="White" BorderThickness="1" BorderBrush="Black">
                                        <ListBox x:Name="FilterSuperTypesListBox" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectionMode="Multiple">
                                            <ListBox.Resources>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                <CheckBox Margin="5,2" IsChecked="{TemplateBinding IsSelected}" Loaded="CheckBox_Loaded" Tag="SuperType">
                                                                    <ContentPresenter/>
                                                                </CheckBox>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <EventSetter Event="ToggleButton.Checked" Handler="CheckBox_Checked"/>
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="CheckBox_Unchecked"/>
                                                </Style>
                                            </ListBox.Resources>
                                        </ListBox>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </ComboBox.Template>
                    <sys:String>&gt;</sys:String>
                </ComboBox>
                <CheckBox x:Name="SuperTypesAndOrCheckBox" Content="AND" HorizontalAlignment="Right" Margin="0,225,0,0" VerticalAlignment="Top" Style="{StaticResource BelerenBold}" Checked="AndOrCheckBox_Toggled" Unchecked="AndOrCheckBox_Toggled"/>

                <!--Card type listbox and filtering-->
                <ComboBox x:Name="TypesComboBox" HorizontalAlignment="Left" Margin="10,255,0,0" VerticalAlignment="Top" Width="190" Height="20" DropDownOpened="ComboBox_DropDownOpened">
                    <ComboBox.Template>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <TextBox x:Name="FilterTypesTextBox"
                                         Background="Transparent"
                                         TextChanged="FilterTextBox_TextChanged"
                                         GotFocus="TextBox_GotFocus"
                                         LostFocus="TextBox_LostFocus"
                                         Foreground="{TemplateBinding Foreground}"
                                         Padding="3,3,0,0"
                                         Margin="0,0,0,0"/>
                                <ToggleButton x:Name="ToggleButtonTypes" 
                                              Content="Types"
                                              Focusable="false"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                              HorizontalAlignment="Right"
                                              Width="40"/>
                                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False">
                                    <Border Background="White" BorderThickness="1" BorderBrush="Black">
                                        <ListBox x:Name="FilterTypesListBox" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectionMode="Multiple">
                                            <ListBox.Resources>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                <CheckBox Margin="5,2" IsChecked="{TemplateBinding IsSelected}" Loaded="CheckBox_Loaded" Tag="Type">
                                                                    <ContentPresenter/>
                                                                </CheckBox>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <EventSetter Event="ToggleButton.Checked" Handler="CheckBox_Checked"/>
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="CheckBox_Unchecked"/>
                                                </Style>
                                            </ListBox.Resources>
                                        </ListBox>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </ComboBox.Template>
                    <sys:String>&gt;</sys:String>
                </ComboBox>
                <CheckBox x:Name="TypesAndOrCheckBox" Content="AND" HorizontalAlignment="Right" Margin="0,255,0,0" VerticalAlignment="Top" Style="{StaticResource BelerenBold}" Checked="AndOrCheckBox_Toggled" Unchecked="AndOrCheckBox_Toggled"/>

                <!--Subtype listbox and filtering-->
                <ComboBox x:Name="SubTypesComboBox" HorizontalAlignment="Left" Margin="10,285,0,0" VerticalAlignment="Top" Width="190" DropDownOpened="ComboBox_DropDownOpened" Height="20">
                    <ComboBox.Template>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <TextBox x:Name="FilterSubTypesTextBox"
                                         Background="Transparent"
                                         TextChanged="FilterTextBox_TextChanged"
                                         GotFocus="TextBox_GotFocus"
                                         LostFocus="TextBox_LostFocus"
                                         Foreground="{TemplateBinding Foreground}"
                                         Padding="3,3,0,0"
                                         Margin="0,0,0,0"/>
                                <ToggleButton x:Name="ToggleButtonSubTypes"
                                              Content="Subtypes"
                                              Focusable="false"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                              HorizontalAlignment="Right"
                                              Width="58"/>
                                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False">
                                    <Border Background="White" BorderThickness="1" BorderBrush="Black">
                                        <ListBox x:Name="FilterSubTypesListBox" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectionMode="Multiple">
                                            <ListBox.Resources>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                <CheckBox Margin="5,2" IsChecked="{TemplateBinding IsSelected}" Loaded="CheckBox_Loaded" Tag="SubType">
                                                                    <ContentPresenter/>
                                                                </CheckBox>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <EventSetter Event="ToggleButton.Checked" Handler="CheckBox_Checked"/>
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="CheckBox_Unchecked"/>
                                                </Style>
                                            </ListBox.Resources>
                                        </ListBox>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </ComboBox.Template>
                    <sys:String>&gt;</sys:String>
                </ComboBox>
                <CheckBox x:Name="SubTypesAndOrCheckBox" Content="AND" HorizontalAlignment="Right" Margin="0,285,0,0" VerticalAlignment="Top" Checked="AndOrCheckBox_Toggled" Unchecked="AndOrCheckBox_Toggled"  Style="{StaticResource BelerenBold}"/>

                <!--Keywords listbox and filtering-->
                <ComboBox x:Name="KeywordsComboBox" HorizontalAlignment="Left" Margin="9,315,0,0" VerticalAlignment="Top" Width="190" DropDownOpened="ComboBox_DropDownOpened" Height="20">
                    <ComboBox.Template>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <TextBox x:Name="FilterKeywordsTextBox"
                                         Background="Transparent"
                                         TextChanged="FilterTextBox_TextChanged"
                                         GotFocus="TextBox_GotFocus"
                                         LostFocus="TextBox_LostFocus"
                                         Foreground="{TemplateBinding Foreground}"
                                         Padding="3,3,0,0"
                                         Margin="0,0,0,0"/>
                                <ToggleButton x:Name="ToggleButtonKeywords" Content="Keywords" Focusable="false"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                              HorizontalAlignment="Right"
                                              Width="60"/>
                                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False">
                                    <Border Background="White" BorderThickness="1" BorderBrush="Black">
                                        <ListBox x:Name="FilterKeywordsListBox" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectionMode="Multiple">
                                            <ListBox.Resources>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                <CheckBox Margin="5,2" IsChecked="{TemplateBinding IsSelected}" Loaded="CheckBox_Loaded" Tag="Keywords">
                                                                    <ContentPresenter/>
                                                                </CheckBox>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <EventSetter Event="ToggleButton.Checked" Handler="CheckBox_Checked"/>
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="CheckBox_Unchecked"/>
                                                </Style>
                                            </ListBox.Resources>
                                        </ListBox>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </ComboBox.Template>
                    <sys:String>&gt;</sys:String>
                </ComboBox>
                <CheckBox x:Name="KeywordsAndOrCheckBox" Content="AND" HorizontalAlignment="Right" Margin="0,315,0,0" VerticalAlignment="Top" Checked="AndOrCheckBox_Toggled" Unchecked="AndOrCheckBox_Toggled"  Style="{StaticResource BelerenBold}"/>

                <!--Finishes listbox and filtering-->
                <ComboBox x:Name="FinishesComboBox" HorizontalAlignment="Left" Margin="10,345,0,0" VerticalAlignment="Top" Width="190" DropDownOpened="ComboBox_DropDownOpened" Height="20">
                    <ComboBox.Template>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <TextBox x:Name="FilterFinishesTextBox"
                                         Background="Transparent"
                                         TextChanged="FilterTextBox_TextChanged"
                                         GotFocus="TextBox_GotFocus"
                                         LostFocus="TextBox_LostFocus"
                                         Foreground="{TemplateBinding Foreground}"
                                         Padding="3,3,0,0"
                                         Margin="0,0,0,0"/>
                                <ToggleButton x:Name="ToggleButtonFinishes" Content="Finishes" Focusable="false"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                              HorizontalAlignment="Right"
                                              Width="60"/>
                                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False">
                                    <Border Background="White" BorderThickness="1" BorderBrush="Black">
                                        <ListBox x:Name="FilterFinishesListBox" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectionMode="Multiple">
                                            <ListBox.Resources>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                <CheckBox Margin="5,2" IsChecked="{TemplateBinding IsSelected}" Loaded="CheckBox_Loaded" Tag="Finishes">
                                                                    <ContentPresenter/>
                                                                </CheckBox>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <EventSetter Event="ToggleButton.Checked" Handler="CheckBox_Checked"/>
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="CheckBox_Unchecked"/>
                                                </Style>
                                            </ListBox.Resources>
                                        </ListBox>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </ComboBox.Template>
                    <sys:String>&gt;</sys:String>
                </ComboBox>
                <CheckBox x:Name="FinishesAndOrCheckBox" Content="AND" HorizontalAlignment="Right" Margin="0,345,0,0" VerticalAlignment="Top" Checked="AndOrCheckBox_Toggled" Unchecked="AndOrCheckBox_Toggled"  Style="{StaticResource BelerenBold}"/>

                <!--Rulestext filtering-->
                <TextBox x:Name="FilterRulesTextTextBox" HorizontalAlignment="Left" Margin="10,375,0,0" TextWrapping="Wrap" Foreground="Gray" GotFocus="TextBox_GotFocus" LostFocus="TextBox_LostFocus" VerticalAlignment="Top" Width="240" Height="45" Background="White"/>
                <Button x:Name="FilterRulesTextButton" Content="Filter rulestext" HorizontalAlignment="Left" Margin="10,425,0,0" VerticalAlignment="Top" Click="FilterRulesTextButton_Click" Height="20" Width="90"/>

                <Label Content="Select prices (MCM):" HorizontalAlignment="Left" Margin="10,455,0,0" VerticalAlignment="Top" Style="{StaticResource BelerenBold}"/>
                <ComboBox x:Name="PriceSelector" Width="65" SelectionChanged="PriceSelector_SelectionChanged" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="130,455,0,0">
                    <ComboBoxItem Content="Avg" />
                    <ComboBoxItem Content="Avg1" />
                    <ComboBoxItem Content="Avg7" />
                    <ComboBoxItem Content="Avg30" />
                    <ComboBoxItem Content="Low" />
                    <ComboBoxItem Content="Trend" />
                </ComboBox>
                
                <!--Languages filtering-->
                <ComboBox x:Name="LanguagesComboBox" HorizontalAlignment="Left" Margin="10,485,0,0" VerticalAlignment="Top" Width="240" DropDownOpened="ComboBox_DropDownOpened" Height="20">
                    <ComboBox.Template>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <TextBox x:Name="FilterLanguagesTextBox"
                                         Background="Transparent"
                                         TextChanged="FilterTextBox_TextChanged"
                                         GotFocus="TextBox_GotFocus"
                                         LostFocus="TextBox_LostFocus"
                                         Foreground="{TemplateBinding Foreground}"
                                         Padding="3,3,0,0"
                                         Margin="0,0,0,0"/>
                                <ToggleButton x:Name="ToggleButtonLanguages" Content="Languages" Focusable="false" ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                              HorizontalAlignment="Right"
                                              Width="65"/>
                                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False">
                                    <Border Background="White" BorderThickness="1" BorderBrush="Black">
                                        <ListBox x:Name="FilterLanguagesListBox" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectionMode="Multiple">
                                            <ListBox.Resources>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                <CheckBox Margin="5,2" IsChecked="{TemplateBinding IsSelected}" Loaded="CheckBox_Loaded" Tag="Languages">
                                                                    <ContentPresenter/>
                                                                </CheckBox>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <EventSetter Event="ToggleButton.Checked" Handler="CheckBox_Checked"/>
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="CheckBox_Unchecked"/>
                                                </Style>
                                            </ListBox.Resources>
                                        </ListBox>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </ComboBox.Template>
                    <sys:String>&gt;</sys:String>
                </ComboBox>

                <ComboBox x:Name="ConditionsComboBox" HorizontalAlignment="Left" Margin="10,515,0,0" VerticalAlignment="Top" Width="240" DropDownOpened="ComboBox_DropDownOpened" Height="20">
                    <ComboBox.Template>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <TextBox x:Name="FilterConditionsTextBox"
                                         Background="Transparent"
                                         TextChanged="FilterTextBox_TextChanged"
                                         GotFocus="TextBox_GotFocus"
                                         LostFocus="TextBox_LostFocus"
                                         Foreground="{TemplateBinding Foreground}"
                                         Padding="3,3,0,0"
                                         Margin="0,0,0,0"/>
                                <ToggleButton x:Name="ToggleButtonConditions" Content="Card Conditions" Focusable="false" ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                              HorizontalAlignment="Right"
                                              Width="100"/>
                                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False">
                                    <Border Background="White" BorderThickness="1" BorderBrush="Black">
                                        <ListBox x:Name="FilterConditionsListBox" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectionMode="Multiple">
                                            <ListBox.Resources>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                <CheckBox Margin="5,2" IsChecked="{TemplateBinding IsSelected}" Loaded="CheckBox_Loaded" Tag="Conditions">
                                                                    <ContentPresenter/>
                                                                </CheckBox>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <EventSetter Event="ToggleButton.Checked" Handler="CheckBox_Checked"/>
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="CheckBox_Unchecked"/>
                                                </Style>
                                            </ListBox.Resources>
                                        </ListBox>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </ComboBox.Template>
                    <sys:String>&gt;</sys:String>
                </ComboBox>

                <CheckBox x:Name="CheckBoxCardsForTrade" Margin="10,540,0,0" Content="Filter on cards for trade" HorizontalAlignment="Left" VerticalAlignment="Top" Checked="AndOrCheckBox_Toggled" Unchecked="AndOrCheckBox_Toggled"/>
                <CheckBox x:Name="CheckBoxCardsNotForTrade" Margin="10,560,0,0" Content="Filter on cards NOT for trade" HorizontalAlignment="Left" VerticalAlignment="Top" Checked="AndOrCheckBox_Toggled" Unchecked="AndOrCheckBox_Toggled"/>

            </Grid>
            <Grid x:Name="GridUtilsMenu" Visibility="Collapsed">
                <Button x:Name="CreateBackupButton" Content="Create backup of my collection" HorizontalAlignment="Left" Margin="10,0,0,0" Height="20" Width="180" VerticalAlignment="Top" Click="CreateBackupButton_Click"/>
                <Button x:Name="ImportCollectionButton" Content="The Import Wizard" HorizontalAlignment="Left" Margin="10,30,0,0" Width="180" Height="20" VerticalAlignment="Top" Click="ImportCollectionButton_Click"/>
                <Button x:Name="UpdatePricesButton" Content="Update card prices" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,60,0,0" Width="180" Height="20" Click="UpdatePricesButton_Click"/>
                <Button x:Name="CheckForUpdatesButton" Content="Check for card database updates" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,90,0,0" Width="180" Height="20" Click="CheckForUpdatesButton_Click"/>
                <Button x:Name="UpdateDbButton" Content="Update card database" HorizontalAlignment="Left" Width="180" Height="20" Margin="10,120,0,0" VerticalAlignment="Top" Visibility="Collapsed" Click="UpdateDbButton_Click"/>
            </Grid>
        </Grid>
        <Grid x:Name="GridContentSection" Grid.Row="1" Grid.Column="1" Margin="5,0,5,0" Visibility="Hidden">
            <Image x:Name="LogoSmall" Source="/Resources/Images/Logo.png" Stretch="Fill" VerticalAlignment="Top" HorizontalAlignment="Center" Height="170" Width="170" RenderTransformOrigin="0.5,0.5" Margin="0,70,0,0" Opacity="0.8" />
            <ScrollViewer HorizontalAlignment="Left" Margin="0,240,0,0" VerticalAlignment="Top" Height="40" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <TextBlock x:Name="FilterSummaryTextBlock" HorizontalAlignment="Left" Margin="0,0,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
            </ScrollViewer>
            <Grid x:Name="GridSearchAndFilterAllCards">
                <Label x:Name="HeadlineSearchAndFilter" Content="Search and Filter Cards" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="24" Height="40" Style="{StaticResource BelerenBold}"/>
                <Label x:Name="AllCardsCountLabel" Content="" HorizontalAlignment="Left" Margin="0,25,0,0" VerticalAlignment="Top" Height="30"/>
                <Button x:Name="ButtonSubmitCardsToMyCollection" Content="Submit these cards to my collection" HorizontalAlignment="Right" Margin="0,45,0,0" VerticalAlignment="Top" Width="200" Height="20" Visibility="Collapsed" Click="ButtonSubmitCardsToMyCollection_Click"/>
                <Button x:Name="ButtonClearCardsToAdd" Content="Clear cards without submitting" HorizontalAlignment="Right" Margin="0,45,210,0" VerticalAlignment="Top" Width="200" Height="20" Visibility="Collapsed" Click="ButtonClearCardsToAdd_Click"/>
                <Button x:Name="ButtonAddCardsToMyCollection" Content="Add selected cards to my collection" HorizontalAlignment="Right" Margin="0,250,0,0" VerticalAlignment="Top" Width="200" Height="20" Visibility="{Binding ElementName=AllCardsDataGrid, Path=SelectedItems.Count, Converter={StaticResource CountToVisibilityConverter}}" Click="ButtonAddCardsToMyCollection_Click"/>
                <ScrollViewer x:Name="AddStatusScrollViewer" HorizontalAlignment="Left" Margin="0,40,0,0" VerticalAlignment="Top" Height="187" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Visibility="Collapsed">
                    <TextBlock x:Name="AddStatusTextBlock" TextWrapping="Wrap" VerticalAlignment="Top"/>
                </ScrollViewer>
                <!--Cards to add listview-->
                <ListView x:Name="CardsToAddListView" Margin="0,70,0,0" VerticalAlignment="Top" Height="170" Visibility="Collapsed">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Card Name" DisplayMemberBinding="{Binding Name}"/>
                            <GridViewColumn Header="Set" DisplayMemberBinding="{Binding SetName}"/>
                            <GridViewColumn Header="Condition">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Conditions}" SelectedItem="{Binding SelectedCondition, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ListViewComboBox_SelectionChanged"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Finish">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding AvailableFinishes}" SelectedItem="{Binding SelectedFinish, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ListViewComboBox_SelectionChanged"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Language">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding OtherLanguages}" SelectedItem="{Binding Language, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ListViewComboBox_SelectionChanged"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="+">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="+" Tag="CardsOwned" VerticalAlignment="Center" Grid.Column="1" HorizontalAlignment="Right" Width="15" Background="#FFFBF7B4" Click="IncrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Count">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Width="Auto" HorizontalAlignment="Center" Background="White" TextChanged="CardsOwnedTextBox_TextChanged">
                                            <TextBox.Text>
                                                <Binding Path="CardsOwned" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:IntegerValidationRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="-">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="-" Tag="CardsOwned" VerticalAlignment="Center" Grid.Column="0" HorizontalAlignment="Left" Width="15" Background="#FFFBF7B4" Click="DecrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="+">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="+" Tag="CardsForTrade" VerticalAlignment="Center" Grid.Column="1" HorizontalAlignment="Right" Width="15" Background="#FFFBF7B4" Click="IncrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Trade">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Width="Auto" HorizontalAlignment="Center" Background="White" TextChanged="CardsForTradeTextBox_TextChanged">
                                            <TextBox.Text>
                                                <Binding Path="CardsForTrade" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:IntegerValidationRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="-1">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="-" Tag="CardsForTrade" VerticalAlignment="Center" Grid.Column="0" HorizontalAlignment="Left" Width="15" Background="#FFFBF7B4" Click="DecrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
                <!--The main card view datagrid-->
                <DataGrid x:Name="AllCardsDataGrid"
                          Margin="0,280,0,0"
                          AutoGenerateColumns="False"
                          SelectionChanged="CardImageSelectionChangedHandler"
                          MouseDoubleClick="DataGrid_MouseDoubleClick"
                          ScrollViewer.CanContentScroll="True"
                          EnableColumnVirtualization="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          CanUserAddRows="False"
                          CanUserSortColumns="True"
                          HorizontalAlignment="Stretch"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <DataGrid.ContextMenu>
                        <ContextMenu Style="{StaticResource MPlantin}">
                            <MenuItem Header="Add selected card(s) to Collection" Click="ButtonAddCardsToMyCollection_Click" Style="{StaticResource BelerenBold}"/>
                            <MenuItem Header="Add selected card(s) with DEFAULT values to Collection" Click="ButtonAddCardsToMyCollectionWithDefaultValues_Click" Style="{StaticResource BelerenBold}"/>
                            <MenuItem Header="">
                                <MenuItem.Template>
                                    <ControlTemplate>
                                        <Label Content="Default values are:" Margin="30,0,0,0"/>
                                    </ControlTemplate>
                                </MenuItem.Template>
                            </MenuItem>
                            <MenuItem Header="">
                                <MenuItem.Template>
                                    <ControlTemplate>
                                        <Label Content=" - Condition: Near Mint" Margin="30,0,0,0"/>
                                    </ControlTemplate>
                                </MenuItem.Template>
                            </MenuItem>
                            <MenuItem Header="">
                                <MenuItem.Template>
                                    <ControlTemplate>
                                        <Label Content=" - Language: English" Margin="30,0,0,0"/>
                                    </ControlTemplate>
                                </MenuItem.Template>
                            </MenuItem>
                            <MenuItem Header="">
                                <MenuItem.Template>
                                    <ControlTemplate>
                                        <Label Content=" - Finish: nonfoil" Margin="30,0,0,0"/>
                                    </ControlTemplate>
                                </MenuItem.Template>
                            </MenuItem>
                            <MenuItem Header="">
                                <MenuItem.Template>
                                    <ControlTemplate>
                                        <Label Content=" - Count: 1" Margin="30,0,0,0"/>
                                    </ControlTemplate>
                                </MenuItem.Template>
                            </MenuItem>
                            <MenuItem Header="">
                                <MenuItem.Template>
                                    <ControlTemplate>
                                        <Label Content=" - Trade: 0" Margin="30,0,0,0"/>
                                    </ControlTemplate>
                                </MenuItem.Template>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Name" Width="*" SortMemberPath="Name">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="Name" VerticalAlignment="Center" Grid.Column="0"/>
                                        <ComboBox x:Name="AllCardsNameComboBox"
                                                  IsTextSearchEnabled="True" 
                                                  Grid.Column="1"
                                                  HorizontalAlignment="Stretch"
                                                  Height="20"
                                                  IsEditable="True"
                                                  Width="{Binding ColumnWidths[0][0], RelativeSource={RelativeSource AncestorType=Window}}" 
                                                  Tag="AllCardsName"
                                                  SelectionChanged="ComboBox_SelectionChanged">
                                            <ComboBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel />
                                                </ItemsPanelTemplate>
                                            </ComboBox.ItemsPanel>
                                        </ComboBox>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Set" Width="*" SortMemberPath="SetName">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="Set" VerticalAlignment="Center" Grid.Column="0"/>
                                        <ComboBox x:Name="AllCardsSetComboBox" IsTextSearchEnabled="True" 
                                                  Grid.Column="1"
                                                  HorizontalAlignment="Stretch"
                                                  Height="20"
                                                  IsEditable="True"
                                                  Width="{Binding ColumnWidths[0][1], RelativeSource={RelativeSource AncestorType=Window}}" 
                                                  Tag="AllCardsSet"
                                                  SelectionChanged="ComboBox_SelectionChanged">
                                            <ComboBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel />
                                                </ItemsPanelTemplate>
                                            </ComboBox.ItemsPanel>
                                        </ComboBox>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SetName}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Icon" IsReadOnly="True" Width="Auto" SortMemberPath="ReleaseDate">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding SetIcon}" Width="20" Height="20" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Mana Cost" IsReadOnly="True" Width="Auto" SortMemberPath="ManaValue">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding ManaCostImage}" Height="20" HorizontalAlignment="Right"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Card Types" Width="*" SortMemberPath="Types">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Types}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Finishes" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Finishes}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Price" Width="*" SortMemberPath="SelectedPrice">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SelectedPrice}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Foil Price" Width="*" SortMemberPath="SelectedFoilPrice">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SelectedFoilPrice}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <Grid x:Name="GridMyCollection">
                <Label x:Name="HeadlineMyCollection" Content="My Collection" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="24" Height="40" Style="{StaticResource BelerenBold}"/>
                <Label x:Name="MyCardsCountLabel" Content="" HorizontalAlignment="Left" Margin="0,25,0,0" VerticalAlignment="Top" Height="30"/>
                <Button x:Name="ButtonSubmitCardEditsInMyCollection" Content="Update selected cards" HorizontalAlignment="Right" Margin="0,45,0,0" VerticalAlignment="Top" Width="200" Height="20" Click="SubmitCardEditsInMyCollection_Click" Visibility="Collapsed"/>
                <Button x:Name="ButtonClearCardsToEdit" Content="Clear cards without submitting" HorizontalAlignment="Right" Margin="0,45,210,0" VerticalAlignment="Top" Width="200" Height="20" Visibility="Collapsed" Click="ButtonClearCardsToEdit_Click"/>
                <Button x:Name="ButtonEditCardsInMyCollection" Content="Edit selected cards" HorizontalAlignment="Right" Margin="0,250,0,0" VerticalAlignment="Top" Width="200" Height="20" Visibility="{Binding ElementName=MyCollectionDataGrid, Path=SelectedItems.Count, Converter={StaticResource CountToVisibilityConverter}}" Click="ButtonEditCardsInCollection_Click"/>
                <ScrollViewer x:Name="EditStatusScrollViewer" HorizontalAlignment="Left" Margin="0,40,0,0" VerticalAlignment="Top" Height="187" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Visibility="Collapsed">
                    <TextBlock x:Name="EditStatusTextBlock" HorizontalAlignment="Left" Margin="0,40,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
                </ScrollViewer>
                <!--Cards to edit-->
                <ListView x:Name="CardsToEditListView" Margin="0,70,0,0" VerticalAlignment="Top" Height="170" Visibility="Collapsed">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Card Name" DisplayMemberBinding="{Binding Name}"/>
                            <GridViewColumn Header="Set" DisplayMemberBinding="{Binding SetName}"/>
                            <GridViewColumn Header="Condition">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding Conditions}" SelectedItem="{Binding SelectedCondition, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ListViewComboBox_SelectionChanged"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Finish">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding AvailableFinishes}" SelectedItem="{Binding SelectedFinish, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ListViewComboBox_SelectionChanged"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Language">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox ItemsSource="{Binding OtherLanguages}" SelectedItem="{Binding Language, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ListViewComboBox_SelectionChanged"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="+">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="+" Tag="CardsOwned" VerticalAlignment="Center" Grid.Column="1" HorizontalAlignment="Right" Width="15" Background="#FFFBF7B4" Click="IncrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Count">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Width="Auto" HorizontalAlignment="Center" Background="White" TextChanged="CardsOwnedTextBox_TextChanged">
                                            <TextBox.Text>
                                                <Binding Path="CardsOwned" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:IntegerValidationRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="-">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="-" Tag="CardsOwned" VerticalAlignment="Center" Grid.Column="0" HorizontalAlignment="Left" Width="15" Background="#FFFBF7B4" Click="DecrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="+">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="+" Tag="CardsForTrade" VerticalAlignment="Center" Grid.Column="1" HorizontalAlignment="Right" Width="15" Background="#FFFBF7B4" Click="IncrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Trade">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Width="Auto" HorizontalAlignment="Center" Background="White" TextChanged="CardsForTradeTextBox_TextChanged">
                                            <TextBox.Text>
                                                <Binding Path="CardsForTrade" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" ValidatesOnDataErrors="True" NotifyOnValidationError="True">
                                                    <Binding.ValidationRules>
                                                        <local:IntegerValidationRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="-1">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="-" Tag="CardsForTrade" VerticalAlignment="Center" Grid.Column="0" HorizontalAlignment="Left" Width="15" Background="#FFFBF7B4" Click="DecrementCount_Click"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
                <!--The my collection datagrid-->
                <DataGrid x:Name="MyCollectionDataGrid"
                          Margin="0,280,0,0"
                          AutoGenerateColumns="False"
                          SelectionChanged="CardImageSelectionChangedHandler"
                          MouseDoubleClick="DataGrid_MouseDoubleClick"
                          ScrollViewer.CanContentScroll="True"
                          EnableColumnVirtualization="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          CanUserAddRows="False"
                          CanUserSortColumns="True"
                          HorizontalAlignment="Stretch"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <DataGrid.ContextMenu>
                        <ContextMenu Style="{StaticResource MPlantin}">
                            <MenuItem Header="EDIT selected card(s)" Click="ButtonEditCardsInCollection_Click" Style="{StaticResource BelerenBold}"/>
                            <MenuItem Header="UPDATE selected card(s) - put ALL for TRADE" Click="ButtonSetCardsForTrade_Click" Style="{StaticResource BelerenBold}"/>
                            <MenuItem Header="UPDATE selected card(s) - put NONE for TRADE" Click="ButtonSetNoneForTrade_Click" Style="{StaticResource BelerenBold}"/>
                            <MenuItem Header="DELETE card(s) from collection" Click="ButtonDeleteCardsFromCollection_Click" Style="{StaticResource BelerenBold}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Name" Width="*" SortMemberPath="Name">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="Name" VerticalAlignment="Center" Grid.Column="0"/>
                                        <ComboBox x:Name="MyCollectionNameComboBox" IsTextSearchEnabled="True"
                                                  Grid.Column="1"
                                                  HorizontalAlignment="Stretch"
                                                  Height="20"
                                                  IsEditable="True"
                                                  Width="{Binding ColumnWidths[1][0], RelativeSource={RelativeSource AncestorType=Window}}" 
                                                  Tag="MyCollectionName"
                                                  SelectionChanged="ComboBox_SelectionChanged">
                                            <ComboBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel />
                                                </ItemsPanelTemplate>
                                            </ComboBox.ItemsPanel>
                                        </ComboBox>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Set" Width="*" SortMemberPath="SetName">
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="Set" VerticalAlignment="Center" Grid.Column="0"/>
                                        <ComboBox x:Name="MyCollectionSetComboBox" 
                                                  IsTextSearchEnabled="True"
                                                  Grid.Column="1"
                                                  HorizontalAlignment="Stretch"
                                                  Height="20"
                                                  IsEditable="True"
                                                  Width="{Binding ColumnWidths[1][1], RelativeSource={RelativeSource AncestorType=Window}}"
                                                  Tag="MyCollectionSet"
                                                  SelectionChanged="ComboBox_SelectionChanged">
                                            <ComboBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel />
                                                </ItemsPanelTemplate>
                                            </ComboBox.ItemsPanel>
                                        </ComboBox>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SetName}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Icon" IsReadOnly="True" Width="Auto" SortMemberPath="ReleaseDate">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding SetIcon}" Width="20" Height="20" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Mana Cost" Width="Auto" IsReadOnly="True" SortMemberPath="ManaValue">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding ManaCostImage}" Height="20" HorizontalAlignment="Right"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Card Types" Width="*" SortMemberPath="Types">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Types}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Finish" Width="*" SortMemberPath="SelectedFinish">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SelectedFinish}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Language" Width="*" SortMemberPath="Language">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Language}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Condition" Width="*" SortMemberPath="SelectedCondition">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SelectedCondition}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Count" Width="*" SortMemberPath="CardsOwned">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding CardsOwned}" TextWrapping="Wrap"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Trade" Width="*" SortMemberPath="CardsForTrade">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding CardsForTrade}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Price" Width="*" SortMemberPath="SelectedPrice">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SelectedPrice}" TextWrapping="Wrap" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <Grid x:Name="GridUtilitiesSection" VerticalAlignment="Top">
                <Label x:Name="HeadlineUtilities" Content="Utilities" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="24" Height="40" Style="{StaticResource BelerenBold}"/>
                <Label x:Name="UtilsInfoLabel" Content="" HorizontalAlignment="Center" Margin="8,150,0,0" VerticalAlignment="Top" FontSize="16"/>
                <Image x:Name="Inspiredtinkering" Margin="0,200,0,0" Source="/Resources/Images/inspired-tinkering-183.png" HorizontalAlignment="Center" VerticalAlignment="Top" Width="600" Opacity="0.698"/>                
                <Grid x:Name="GridImportWizard" Visibility="Collapsed">
                    <Label x:Name="ImportStartLabel" Content="The Import Wizard" HorizontalAlignment="Center" Margin="0,45,0,0" VerticalAlignment="Top" FontSize="48" Style="{StaticResource BelerenBold}"/>
                    <Button x:Name="ButtonCancelImport" Content="Cancel Import" HorizontalAlignment="Center" Margin="0,350,410,0" VerticalAlignment="Top" Width="90" Height="20" Visibility="Collapsed" Click="CancelImport_Click"/>
                    <Label x:Name="CrunchingDataLabel" Content="Please wait - crunching data..." HorizontalAlignment="Center" Margin="0,350,0,0" VerticalAlignment="Top" Height="25" Width="170" Visibility="Collapsed"/>
                    <Grid x:Name="GridImportStartScreen" HorizontalAlignment="Center" Visibility="Collapsed">
                        <TextBlock HorizontalAlignment="Center" Margin="0,146,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="280" FontSize="16">
                            <Run Text="You have chosen to consult the Import Wizard. This will allow you to import card lists to your collection. "/>
                            <LineBreak/><LineBreak/>
                            <Run Text="Some important notes:"/><LineBreak/>
                            <Run Text=" &#x2022; Card list has to be in a .csv format"/><LineBreak/>
                            <Run Text=" &#x2022; Cards imported with the wizard will be ADDED to existing cards in your collection"/><LineBreak/>
                            <Run Text=" &#x2022; Imported cards will be mapped to a specific version of the card"/>
                            <LineBreak/><LineBreak/>
                            <Run Text="Elborating on the last point: As an example, there are 4 different versions of the card &quot;Flooded Strand&quot; in the Modern Horizons 3. If your card list contains:"/>
                            <LineBreak/><LineBreak/>
                            <Run Text=" &#x2022; | Flooded Strand | Modern Horizons 3 |"/>
                            <LineBreak/><LineBreak/>
                            <Run Text="...we need to figure out which specific version of &quot;Flooded Strand&quot; should be added to your collection."/><LineBreak/>
                        </TextBlock>
                        <Image Margin="0,420,0,0" Source="/Resources/Images/rush_of_knowledge.jpg" HorizontalAlignment="Center" VerticalAlignment="Top" Height="274" Width="344" Opacity="0.7"/>
                        <Button x:Name="BeginImportButton" Content="Let's go!" HorizontalAlignment="Center" Margin="0,720,0,0" VerticalAlignment="Top" Height="20" Click="BeginImportButton_Click" Width="74"/>
                    </Grid>
                    <Grid x:Name="GridImportIdColumnMapping" Visibility="Collapsed">
                        <Label Content="Does you import file have an ID column?" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                        <TextBlock Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" FontSize="16" HorizontalAlignment="Center">
                            <Run Text="If your csv-file has any column with card Id, The Import Wizard will have the greatest chance of succesfully mapping your cards to be imported with cards in the main card database."/>
                            <LineBreak/><LineBreak/>
                            <Run Text="It will recognize a variety of card id formats, e.g. Scryfall Id, Card Market Id, TCG Player Id etc."/><LineBreak/>
                            <Run Text=" &#x2022; In the "/><Run FontWeight="Bold" Text="left"/><Run Text=" column, choose the card Id header in your import file"/><LineBreak/>
                            <Run Text=" &#x2022; In the "/><Run FontWeight="Bold" Text="right"/><Run Text=" column, choose the matching format available in the card database"/><LineBreak/>
                            <Run Text=" &#x2022; If your import file does not contain a card id column, simply click &quot;Skip&quot;"/>
                        </TextBlock>
                        <ListView x:Name="IdColumnMappingListView" Margin="0,380,0,0" Width="500" Height="77" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Import file card Id header" Width="150">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding CsvHeaders}" SelectedItem="{Binding SelectedCsvHeader}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Matching database card Id format" Width="200">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding DatabaseFields}" SelectedItem="{Binding SelectedDatabaseField}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Reset mapping" Width="100">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="Clear Mapping" Width="85" Click="ClearMappingButton_Click"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Button x:Name="ButtonIdColumnMappingNext" Content="Next" HorizontalAlignment="Center" Margin="410,350,0,0" VerticalAlignment="Top" Width="90" Height="20" Click="ButtonIdColumnMappingNext_Click"/>
                        <Button x:Name="ButtonSkipIdColumnMapping" Content="Skip" HorizontalAlignment="Center" Margin="555,380,0,0" VerticalAlignment="Top" Width="30" Height="20" Click="ButtonSkipIdColumnMapping_Click"/>
                    </Grid>
                    <Grid x:Name="GridImportNameAndSetMapping" Visibility="Collapsed">
                        <Label Content="Card Name, Set Name and Set Code Mapping" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                        <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" FontSize="16">
                            <Run Text="If you are, it means that The Import Wizard was not able to map all cards in import file uniquely to a card in the card database."/>
                            <LineBreak/><LineBreak/>
                            <Run Text="Fret not, bold mage! Now we will try to map the cards in the import file using the card name + set name and/or set code, assuming they exist in the import file."/><LineBreak/>
                            <Run Text="You must choose a mapping for card name and at least one of either set name or set code. If you can map both, it will try to match using both."/>
                        </TextBlock>
                        <ListView x:Name="NameAndSetMappingListView" Margin="0,380,0,0" Width="500" Height="110" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Fields to map" Width="150">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding CardSetField}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Import file header" Width="200">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding CsvHeaders}" SelectedItem="{Binding CsvHeader}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Reset Mapping" Width="100">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="Clear Mapping" Width="85" Click="ClearMappingButton_Click"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Button x:Name="ButtonNameAndSetMappingNext" Content="Next" HorizontalAlignment="Center" Margin="410,350,0,0" VerticalAlignment="Top" Width="90" Height="20" Click="ButtonNameAndSetMappingNext_Click"/>
                    </Grid>
                    <Grid x:Name="GridImportMultipleUuidsSelection" Visibility="Collapsed">
                        <Label Content="Multiple versions of a card found!" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                        <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" FontSize="16">
                            <Run Text="The Good News: We found some of your imported cards in the card database. The Bad News: We found more than one version of the cards matching by card name + set name and/or set code."/>
                            <LineBreak/><LineBreak/>
                            <Run Text="So The Import Wizard needs a bit more help. Choose in the right column the specific version of the card(s) you are trying to import. Check the image reference on the right for help."/><LineBreak/>
                            <Run Text="You must select a version for all cards for the import to continue."/>
                        </TextBlock>
                        <DataGrid x:Name="MultipleUuidsDataGrid"
                                  AutoGenerateColumns="False" 
                                  CanUserAddRows="False"
                                  HorizontalAlignment="Center" Margin="0,380,0,0" Width="500">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name of card to import" Binding="{Binding Name}" Width="*"/>
                                <DataGridTemplateColumn Header="Select a version" Width="*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding VersionedUuids}" 
                                                      DisplayMemberPath="DisplayText"
                                                      SelectedValuePath="Uuid"
                                                      SelectedValue="{Binding SelectedUuid, Mode=TwoWay}" 
                                                      SelectionChanged="CardImageSelectionChangedHandler"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button x:Name="ButtonMultipleUuidsNext" Content="Next" HorizontalAlignment="Center" Margin="410,350,0,0" VerticalAlignment="Top" Width="90" Height="20" Click="ButtonMultipleUuidsNext_Click"/>
                    </Grid>
                    <Grid x:Name="GridImportAdditionalFieldsMapping" Visibility="Collapsed">
                        <Label Content="Mapping additional fields" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                        <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" FontSize="16">
                            <Run Text="Cards will be imported with the following default values if mapping is blank:"/>
                            <LineBreak/><LineBreak/>
                            <Run Text=" &#x2022; Condition: &quot;Near Mint&quot;"/><LineBreak/>
                            <Run Text=" &#x2022; Card Finish: &quot;nonfoil&quot;"/><LineBreak/>
                            <Run Text=" &#x2022; Cards Owned: &quot;1&quot;"/><LineBreak/>
                            <Run Text=" &#x2022; Cards For Trade/Selling: &quot;0&quot;"/><LineBreak/>
                            <Run Text=" &#x2022; Language: &quot;English&quot;"/><LineBreak/>
                        </TextBlock>
                        <ListView x:Name="AddionalFieldsMappingListView" Margin="0,380,0,0" Width="500" Height="180" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Field to map" Width="150">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding CardSetField}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Import file header" Width="200">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding CsvHeaders}" SelectedItem="{Binding CsvHeader}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Reset mapping" Width="100">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="Clear Mapping" Width="85" Click="ClearMappingButton_Click"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Button x:Name="ButtonAdditionalFieldsNext" Content="Next" HorizontalAlignment="Center" Margin="410,350,0,0" VerticalAlignment="Top" Width="90" Height="20" Click="ButtonAdditionalFieldsNext_Click"/>
                    </Grid>
                    <Grid x:Name="GridImportCardConditionsMapping" Visibility="Collapsed">
                        <Label Content="Card conditions" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                        <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" FontSize="16">
                            <Run Text="Left column are the conditions found in the import file. Please map them to available conditions in the database (latter based on MCM conditions)."/>
                            <LineBreak/><LineBreak/>
                            <Run Text="Blank Conditions will be imported as &quot;Near Mint&quot;"/>
                        </TextBlock>
                        <ListView x:Name="ConditionsMappingListView" Margin="0,380,0,0" Width="500" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Conditions found in import file" Width="180">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding CsvValue}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Available conditions in database" Width="200">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding CardSetValue}" SelectedItem="{Binding SelectedCardSetValue}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Reset mapping" Width="100">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="Clear Mapping" Width="85" Click="ClearMappingButton_Click" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Button x:Name="ButtonConditionMappingNext" Content="Next" HorizontalAlignment="Center" Margin="410,350,0,0" VerticalAlignment="Top" Width="90" Height="20" Click="ButtonConditionMappingNext_Click"/>
                    </Grid>
                    <Grid x:Name="GridImportFinishesMapping" Visibility="Collapsed">
                        <Label Content="Card finishes" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                        <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" FontSize="16">
                            <Run Text="Left column are the finishes found in the import file. Please map them to available finishes in the database."/>
                            <LineBreak/><LineBreak/>
                            <Run Text="Blank Conditions will be imported as &quot;nonfoil&quot;"/>
                        </TextBlock>
                        <ListView x:Name="FinishesMappingListView" Margin="0,380,0,0" Width="500" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Finishes found in import file" Width="180">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding CsvValue}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Available conditions in database" Width="200">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding CardSetValue}" SelectedItem="{Binding SelectedCardSetValue}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Reset mapping" Width="Auto">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="Clear Mapping" Width="85" Click="ClearMappingButton_Click"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Button x:Name="ButtonFinishesMappingNext" Content="Next" HorizontalAlignment="Center" Margin="410,350,0,0" VerticalAlignment="Top"  Width="90" Height="20" Click="ButtonFinishesMappingNext_Click"/>
                    </Grid>
                    <Grid x:Name="GridImportLanguageMapping" Visibility="Collapsed">
                        <Label Content="Card languages" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                        <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="140" FontSize="16">
                            <Run Text="Left column are the languages found in the import file. Please map them to available languages in the database."/>
                            <LineBreak/><LineBreak/>
                            <Run Text="Blank Languages will be imported as &quot;English&quot;"/>
                        </TextBlock>
                        <ListView x:Name="LanguageMappingListView" Margin="0,380,0,0" Width="500" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Languages found in import file" Width="180">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding CsvValue}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Available languages in database" Width="200">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding CardSetValue}" SelectedItem="{Binding SelectedCardSetValue}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Reset mapping" Width="100">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="Clear Mapping" Width="85" Click="ClearMappingButton_Click"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Button x:Name="ButtonLanguageMappingNext" Content="Next" HorizontalAlignment="Center" Margin="410,350,0,0" VerticalAlignment="Top"  Width="90" Height="20" Click="ButtonLanguageMappingNext_Click"/>
                    </Grid>
                    <Grid x:Name="GridImportConfirm" Visibility="Collapsed">
                        <Label Content="Summary and confirmation" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                        <Button x:Name="ButtonImportConfirm" Content="Looks good! Proceed with import..." HorizontalAlignment="Center" Margin="0,180,0,0" VerticalAlignment="Top" Width="200" Height="20" Click="ButtonImportConfirm_Click"/>
                        <Grid x:Name="GridImportSummary" Margin="0,210,0,0" Width="500">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Label Content="Number of individual cards that will be added to collection:" HorizontalAlignment="Left" VerticalAlignment="Center" Height="25"  Style="{StaticResource BelerenBold}"/>
                            </Grid>
                            <Grid Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Label x:Name="LabelIndividualCards" HorizontalAlignment="Left" VerticalAlignment="Center" Height="25" />
                            </Grid>
                            <Grid Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Label Content="Total count of cards that will be added to collection:" HorizontalAlignment="Left" VerticalAlignment="Center" Height="25"  Style="{StaticResource BelerenBold}"/>
                            </Grid>
                            <Grid Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Label x:Name="LabelTotalSumOfCards" HorizontalAlignment="Left" VerticalAlignment="Center" Height="25" />
                            </Grid>
                            <Grid Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Label Content="Number of individual cards not possible to import:" HorizontalAlignment="Left" VerticalAlignment="Center" Height="25"  Style="{StaticResource BelerenBold}"/>
                            </Grid>
                            <Grid Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Label x:Name="LabelSumOfUnAbleToImport" HorizontalAlignment="Left" VerticalAlignment="Center" Height="25" />
                            </Grid>
                            <Grid Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Label x:Name="LabelUnableToImportCardsHeading" Content="Unable to import the following cards:" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="16" Style="{StaticResource BelerenBold}" Visibility="Collapsed"/>
                            </Grid>
                            <Grid Grid.Row="4" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Button x:Name="SaveListOfUnimportedItems" Content="Save list to text file" HorizontalAlignment="Right" VerticalAlignment="Center" Width="120" Height="20" Visibility="Collapsed" Click="SaveListOfUnimportedItems_Click"/>
                            </Grid>
                            <Grid Grid.Row="5" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <StackPanel x:Name="ImportSummaryContainer" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,0,0,0" Width="500">
                                    <TextBlock x:Name="ImportSummaryTextBlock" TextWrapping="Wrap" Height="Auto"/>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Grid>
                    <Grid x:Name="GridImportSuccess" Visibility="Collapsed">
                        <Label Content="Import complete!" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,140,0,0" FontSize="24" Style="{StaticResource BelerenBold}"/>
                        <TextBlock HorizontalAlignment="Center" Margin="0,184,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="16" Height="18.5">
                            <Run Text="The cards have now been added to your collection."/>
                        </TextBlock>
                        <Image Margin="0,230,0,0" Source="Resources/Images/IxidorsWill.jpg" HorizontalAlignment="Center" VerticalAlignment="Top" Height="274" Width="344" Opacity="0.7"/>
                        <Button x:Name="ButtonEndImportWizard" Content="Awesome! Take me to my collection..." HorizontalAlignment="Center" Margin="0,540,0,0" VerticalAlignment="Top" Width="220" Height="20" Click="ButtonEndImportWizard_Click"/>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <Grid x:Name="GridCardImages" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" Width="250" Margin="0,0,0,0">
            <Label x:Name="ImagePromoLabel" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Width="250" Style="{StaticResource BelerenBold}"/>
            <Label x:Name="ImageSetLabel" Content="" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Width="250" Margin="0,35,0,0" Style="{StaticResource BelerenBold}"/>
            <Image x:Name="CardImage"
                   Source="{Binding ImageSourceUrl, Converter={StaticResource StringToImageSourceConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,80,10,0"/>

            <Image x:Name="CardImageSecondary"
                   Source="{Binding ImageSourceUrl2nd, Converter={StaticResource StringToImageSourceConverter}, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top" Margin="0,461,10,0"/>
        </Grid>
    </Grid>
</Window>